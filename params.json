{
  "name": "Monica",
  "tagline": "Avoid repeating commands by defining a structured config file",
  "body": "## Monica\r\n[Monica](https://www.youtube.com/watch?v=OY1xxhlq4RU) is a [Go](https://golang.org) project that helps to avoid repeating commands by defining a structured `.monica.yml` config file using dynamic arguments generation and validation.\r\n\r\n### Installation\r\n```\r\nsudo curl -sSo /usr/bin/m https://raw.githubusercontent.com/zenati/monica/master/monica && sudo chmod 777 /usr/bin/m\r\n```\r\n\r\n### Manual download\r\nEvery new Monica version is released using Github Releases and the latest release download links are available here:\r\n```\r\nhttps://github.com/zenati/monica/releases/latest\r\n```\r\n\r\nHere are all available plateforms:\r\n```\r\ni386\r\namd64\r\narmhf\r\ndarwin_386\r\ndarwin_amd64\r\nfreebsd_386\r\nfreebsd_amd64\r\nfreebsd_arm\r\nlinux_386\r\nlinux_amd64\r\nlinux_arm\r\nnetbsd_386\r\nnetbsd_amd64\r\nnetbsd_arm\r\nwindows_386\r\nwindows_amd64\r\n```\r\n\r\n### Example of use\r\nLet's say we need to type almost everyday the following commands:\r\n```\r\n$ rake assets:clobber assets:precompile\r\n$ git add -A\r\n$ git commit -m 'Commit message'\r\n$ git push origin master\r\n```\r\n\r\nAnd these too:\r\n\r\n```\r\n$ goxc -d=dist -pv=12.31\r\n$ touch src/var/debian/file\r\n$ rm -rf dist/debian-tmp\r\n```\r\n\r\nWhat we also need here is to be able to change the `branch`, `commit message`, `pv` and `debian` using command line arguments.\r\n\r\nHere is what defining `reactions` in the `.monica.yml` file would look like:\r\n\r\n```yaml\r\nengine: monica\r\nreactions:\r\n  - name: push\r\n    desc: Pushing current branch to Github\r\n    content:\r\n      - command: rake assets:clobber assets:precompile\r\n      - command: git add -A\r\n      - command: git commit -m '${m}'\r\n      - command: git push origin ${b}\r\n\r\n  - name: c #short for compile\r\n    desc: Compiling latest version for all plateforms\r\n    content:\r\n      - command: goxc -d=dist -pv=${pv}\r\n      - command: touch src/var/${a}/file\r\n      - command: rm -rf dist/${a}-tmp\r\n```\r\n\r\nThe config file should be placed at the root of the git repository to be detected and parsed by `monica`.\r\nOnce done, you can call the following command :\r\n\r\n```\r\nm push -b master -m \"commit message\"\r\n```\r\n\r\nOr to use the Goxc example with `pv=16.32` and `a=debian`:\r\n\r\n```\r\nm c -pv 16.32 -a debian\r\n```\r\n\r\nAnd here is the output for the `push` reaction:\r\n```\r\nmonica executing: push\r\nmonica \t-> rake assets:clobber assets:precompile\r\nmonica \t-> git add -A\r\nmonica \t-> git commit -m '...'\r\nmonica \t-> git push origin master\r\n```\r\n\r\n## Dynamic arguments\r\n`Monica` detects the config file and dynamically creates the needed mandatory options.\r\nHere is an example of `monica --help` output for the example above:\r\n```\r\ncomputer:dir zenati$ monica --help\r\nusage: monica [<flags>] <command> [<args> ...]\r\n\r\nFlags:\r\n  -h, --help     Show context-sensitive help (also try --help-long and --help-man).\r\n      --debug    Enable debug mode.\r\n      --version  Show application version.\r\n\r\nCommands:\r\n  help [<command>...]\r\n    Show help.\r\n\r\n  push --m=M --b=B\r\n    Pushing current branch to Github\r\n\r\n  c --pv=PV --a=A\r\n    Compiling latest version for all plateforms\r\n```\r\n\r\n## License\r\n```\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2016 Yassine Zenati\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}